package com.zj.exec;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.List;

import org.apache.http.Header;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.CookieStore;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.protocol.ClientContext;
import org.apache.http.cookie.Cookie;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.BasicCookieStore;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.impl.cookie.BasicClientCookie;
import org.apache.http.protocol.BasicHttpContext;
import org.apache.http.protocol.HttpContext;
//45,10,6,85,102,63,82,149,77,103,194,187,187,208,67,34,142,135,228,156,50,28,21,191,145,73,87,151,113,72,54,70,29,36,16,8,8,4,3,15,88,77,44,25,65,168,143,76,116,59,66,152,101,135,142,73,36,29,87,101,588,623,183,37,36,148,124,257,207,129,72,24,105,106,83,86,97,39,34,55,80,96,162,126,69,40,118,131,195,227,101,113,29,23,34,223,418,297,159,83,277,158,155,185,170,43,25,117,132,195,459,241,102,79,124,83,222,260,181,17,35,18,90,266,158,85,17,73,265,183,145,241,433,102,126,235,212,212,109,101,14,37,147,174,191,290,199,108,89,96,105,113,152,156,75,60,27,105,184,287,311,67,148,488,628,267,232,114,57,59,90,114,266,241,120,53,107,187,378,962,261,235,16,37,91,155,91,139,193,20,30,184,75,133,191,166,63,29,83,144,191,214,200,42,15,103,116,142,73,127,49,26,168,124,118,139,114,28,15,99,128,120,83,79,33,20,99,127,121,357,466,57,40,269,286,239,141,109,56,48,310,266,556,212,298,126,99,164,160,322,232,135,72,58,40,185,387,112,88,56,24,167,187,486,508,185,115,392,160,143,86,187,179,49,20,37,21,8,20,18,175,93,103,81,95,78,142,39,33,196,231,166,117,118,47,31,126,152,111,109,103,37,19,135,122,168,154,94,51,48,120,115,422,284,167,61,18,133,112,110,119,149,16,25,120,105,77,117,91,12,53,204,163,188,237,192,56,17,143,183,108,66,57,30,31,134,99,257,158,214,146,84,223,199,145,138,170,60,24,288,214,186,114,75,79,29,27,21,193,242,279,57,29,86,148,185,142,173,49,34,98,101,100,112,0,0,3,24,5,12,11,3,24,54,171,157,107,100,102,34,11,106,138,99,130,100,20,15,97,104,66,65,68,29,16,97,87,53,87,97,46,42,115,325,455,125,208,78,31,106,88,180,71,142,34,15,0,124,179,176,97,46,30,44,81,103,129,123,63,27,132,68,144,138,136,286,131,62,38,32,125,76,31,49,93,249,203,109,144,43,26,140,134,127,111,78,24,30,183,128,97,82,85,120,36,27,5,75,87,64,27,20,42,53,239,154,115,18,23,105,201,425,468,115,26,20,103,114,139,87,74,32,28,204,120,132,121,106,25,28,87,174,389,171,145,15,12,111,136,199,139,151,53,13,123,440,301,233,30,16,15,93,66,89,92,151,22,16,99,85,65,53,58,16,14,73,61,107,184,188,50,34,204,112,76,172,129,26,46,135,118,106,88,83,62,58,164,139,75,96,71,24,30,104,169,97,142,166,20,29,149,118,129,416,381,86,44,134,132,77,82,71,16,5,85,72,137,26,137,112,18,139,84,64,89,81,12,6,62,87,69,62,87,12,21,59,112,83,88,73,23,18,82,56,72,153,52,45,17,16,11,9,9,15,11,11,41,48,46,39,78,8,12,58,70,93,85,53,18,6,46,64,27,68,63,28,16,30,87,64,67,46,8,12,57,105,74,0,69,32,26,84,53,34,71,214,84,73,492,473,310,311,180,35,162,348,90,85,95,61,12,8,79,0,342,239,328,129,82,227,211,322,161,348,189,104,282,585,538,759,389,135,77,271,208,197,402,748,339,160,186,105,70,118,339,153,147,299,147,145,207,375,89,101,239,352,201,253,262,141,37,277,488,184,256,279,91,106,203,115,362,168,785,781,613,826,2906,806,784,673,635,486,532,571,701,576,517,791,674,911,816,4066,1424,702,721,619,687,858,768,79567,875,702,699,735,645,793,1020,819,662,526,838,831,818,823,860,649,455,2309,863,708,794,2393,587,508,747,779,2530,2734,754,746,430,235,361,177,65,96,41,174,277,239,232,337,391,118,84,181,267,159,269,177,169,147,356,223,238,419,294,277,205,579,1202,316,1018,391,207,207,247,220,261,141,125,67,103,359,170,157,135,353,110,48,122,211,177,269,109,68,37,98,173,170,208,147,60,69,129,143,220,219,355,295,102,54,40,137,184,104,31,62,116,251,111,97,141,67,62,226,80,77,111,92,42,124,120,85,185,322,279,286,56,270,184,297,586,333,135,56,219,173,114,232,306,126,137,149,222,231,327,376,98,92,229,95,280,362,584,137,50,233,219,254,158,168,97,58,122,460,440,201,186,45,94,333,173,173,131,256,126,83,451,156,155,186,225,174,55,136,142,210,365,413,117,51,165,223,188,136,153,35,57,187,168,276,58,19,16,151,262,193,87,193,93,43,98,99,56,65,10,34,15,13,69,94,141,0,145,90,19,151,279,159,207,299,74,104,171,90,128,147,139,86,81,87,115,165,141,0,0,44,114,169,118,151,208,65,0,107,192,426,0,128,65,20,109,90,106,140,97,61,55,147,196,135,131,119,84,66,184,124,170,132,104,56,56,140,122,77,85,129,46,15,162,175,196,97,121,51,20,94,61,112,123,112,62,35,78,105,42,74,112,20,19,126,163,329,216,161,8,18,102,0,166,188,97,60,17,98,140,101,209,171,47,117,117,123,54,60,16,20,12,13,6,2,14,73,79,8,61,50,80,59,104,116,0,139,208,0,119,95,35,20,194,0,678,379,259,96,40,130,111,83,133,91,50,46,73,137,0,161,60,346,175,387,193,129,116,169,142,39,0,118,101,124,241,106,80,144,259,0,103,115,0,20,77,304,179,229,255,0,36,192,172,148,400,1126,115,0,282,165,198,476,1370,186,165,423,201,165,18,13,16,87,198,111,70,100,96,19,20,120,111,84,113,83,44,48,70,82,85,266,156,46,15,105,0,85,66,64,11,14,9,78,104,105,159,24,17,127,109,134,116,155,85,37,144,94,94,123,78,51,19,80,98,124,0,153,75,11,116,119,98,124,92,38,37,79,127,118,168,130,41,48,119,91,126,149,114,42,19,70,108,125,209,141,58,40,69,100,108,123,126,94,99,113,101,103,127,0,0,64,145,167,93,0,0,85,110,187,110,157,128,0,0,133,199,0,237,187,131,56,54,83,0,104,77,96,55,61,76,122,184,90,133,73,60,133,106,152,73,207,8,18,167,208,103,144,107,93,158,248,212,68,50,71,52,56,42,49,0,118,104,275,48,0,152,204,153,95,83,55,113,0,639,698,263,139,104,155,251,927,146,184,87,20,125,366,278,275,162,68,0,118,173,117,84,1796,972,837,1602,920,1108,123,648,361,20,1513,994,573,1676,540,225,2180,882,976,1216,1571,1653,808,811,127,825,550,728,321,1054,17,357,438,534,1209,1083,305,668,2230,459,744,469,980
public class LoginTest2 {

    private static CookieStore cs = new BasicCookieStore();

    public void test1() throws Exception {
        DefaultHttpClient httpclient = new DefaultHttpClient();

        // 创建一个本地上下文信息
        HttpContext localContext = new BasicHttpContext();
        // 在本地上下问中绑定一个本地存储
        localContext.setAttribute(ClientContext.COOKIE_STORE, cs);

        // 目标地址
        HttpPost httppost = new HttpPost(
                "http://localhost:8080/app/login");

        System.out.println("请求: " + httppost.getRequestLine());
        // 构造最简单的字符串数据
        StringEntity reqEntity = new StringEntity(
                "username=admin&password=admin");
        // 设置类型
        reqEntity.setContentType("application/x-www-form-urlencoded");
        // 设置请求的数据
        httppost.setEntity(reqEntity);
        // 执行
        HttpResponse response = httpclient.execute(httppost);

        Header[] headers = response.getAllHeaders();
        for (Header h : headers) {
            String name = h.getName();
            String value = h.getValue();
            System.out.println("header : " + h.getName() + ":" + h.getValue());

            if ("Set-Cookie".equalsIgnoreCase(name)) {
                String[] strs = value.split(";");
                for (String str : strs) {
                    String[] cookies = str.split("=");
                    System.out.println("=============== : " + cookies[0] + ":"
                            + cookies[1]);
                    cs.addCookie(new BasicClientCookie(cookies[0], cookies[1]));
                }
            }

        }

        HttpEntity entity = response.getEntity();
        System.out.println("----------------------------------------");
        System.out.println(response.getStatusLine());
        if (entity != null) {
            System.out.println("Response content length: "
                    + entity.getContentLength());

        }

        // 显示结果
        BufferedReader reader = new BufferedReader(new InputStreamReader(
                entity.getContent(), "UTF-8"));
        String line = null;
        while ((line = reader.readLine()) != null) {
            System.out.println(line);
        }

        opera();
    }

    private void opera() throws Exception {

        System.out.println("----------------------------------------");
        System.out.println("----------------------------------------");

        String logPath = "http://localhost:8080/app/log";

        DefaultHttpClient httpclient = new DefaultHttpClient();

        String cookieStr = "";
        List<Cookie> list = cs.getCookies();
        for (Cookie cookie : list) {
            cookieStr += cookie.getName() + "=" + cookie.getValue() + ";";
        }

        // 目标地址
        HttpGet httpget = new HttpGet(logPath);
        httpget.setHeader("Cookie", cookieStr);

        System.out.println("请求: " + httpget.getRequestLine());
        // 设置类型
        // 执行
        HttpResponse response = httpclient.execute(httpget);
        HttpEntity entity = response.getEntity();

        BufferedReader reader = new BufferedReader(new InputStreamReader(
                entity.getContent(), "UTF-8"));
        String line = null;
        while ((line = reader.readLine()) != null) {
            System.out.println(line);
        }

    }
}